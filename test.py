# -*- coding: utf-8 -*-
"""Untitled10.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1awqwqZMQRRErzZz_jfitld6NFyTi2n-C
"""

import torch
import numpy as np
import scipy
import pandas as pd
from collections import Counter

train = pd.read_csv("train.csv")
test = pd.read_csv("test.csv")

ratings = np.array(train['rating'].values).astype(np.float32)
userIds = np.array(train['userId'].values)
itemIds = np.array(train['movieId'].values)
ratings_test = np.array(test['rating'].values).astype(np.float32)
userIds_test = np.array(test['userId'].values)
itemIds_test = np.array(test['movieId'].values)
total = len(ratings)
 
cnt_u = Counter(userIds)
cnt_i = Counter(itemIds)

def compress(cnt):
  d = {}
  dt = {}
  z = 0
  for x in cnt:
    d[x] = z
    dt[z] = x
    z += 1
  return d, dt


[compr_u, compr_ut] = compress(cnt_u)
[compr_i, compr_it] = compress(cnt_i)

rated_u = np.array([cnt_u[compr_ut[i]] for i in compr_ut]).reshape(-1,1)
rated_i = np.array([cnt_i[compr_it[i]] for i in compr_it]).reshape(-1,1)

n_users = len(compr_u)
n_items = len(compr_i)

print(n_users, n_items)

userIds = np.array(list(map(lambda x: compr_u[x], userIds)))
itemIds = np.array(list(map(lambda x: compr_i[x], itemIds)))

userIds_test = np.array(list(map(lambda x: compr_u[x], userIds_test)))
itemIds_test = np.array(list(map(lambda x: compr_i[x], itemIds_test)))
total_test = len(ratings_test)

x_test = torch.stack([torch.from_numpy(userIds_test),torch.from_numpy(itemIds_test)],dim = 1)
y_test = torch.from_numpy(ratings_test)

model = torch.load('model2.pth')
model.eval()

print(nn.MSELoss(reduction='mean')(y_test,model(x_test)))